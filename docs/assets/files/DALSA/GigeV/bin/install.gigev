#!/bin/bash
#!/bin/ksh
#-----------------------------------------------------------------------------
# install.gigev
#					Copyright(C) 2009-2011 Teledyne DALSA Inc
#						All rights reserved.
#
# Description:
#       Manual install script for GigE-V Framework under Linux.
#-----------------------------------------------------------------------------
#

export PATH=/sbin:/usr/sbin:/bin:/usr/bin
CUR=$(pwd)
cd ..
GIGEPKGDIR=$(pwd)/..
GIGEVDIR=GigeV
cd $CUR

GEV_VERSION=2.00
GEV_BUILD=0.0108

if  [ $# -eq 0 ] ; then
    OPTION="Install"
elif [ $1 = "install" ] ; then
    OPTION="Install"
elif [ $1 = "Install" ] ; then
    OPTION="Install"
elif [ $1 = "uninstall" ] ; then
    OPTION="Uninstall"
elif [ $1 = "Uninstall" ] ; then
    OPTION="Uninstall"
elif [ $1 = "Info" ] ; then
    OPTION="Info"
elif [ $1 = "info" ] ; then
    OPTION="Info"
else
    echo "You must specify 'install' or 'uninstall'"
    exit 1
fi

if [ $OPTION = "Info" ] ; then
    case $2 in
		product_string_list)
		echo "genie Genie GENIE gigev gige-v GigE-V"
		;;
		product_string)
		echo "gigev"
		;;
		*)
		echo "GigE-V Framework $GEV_VERSION build $GEV_BUILD"
		;;
    esac
    exit 0
fi

if [ -f ../../utils/genie_instools.sh ]; then
   . ../../utils/genie_instools.sh
else
   echo "Missing Component genie_instools"
   exit 0
fi

KVERSION=`uname -r | cut -d '.' -f 2`

if [ $KVERSION -eq 4 ]; then
        MODFILEEXT=o
else
        MODFILEEXT=ko
fi

GENICAM_PKG_STRING="GenICam_v3_0_0_linux_pkg"
GENICAM_VERSION_ENV_STRING="GENICAM_ROOT_V"
GENICAM_OUR_VERSION_ENV_STRING="GENICAM_ROOT_V3_0"

if [ $OPTION = "Install" ] ; then
    GENICAM_INSTALLED="No"
    # Check for GenICam library installation (Needed for this package).
    GENICAM_ENV=`env | grep $GENICAM_VERSION_ENV_STRING`
    #GENICAM_ENV=`env | grep GENICAM_ROOT`
    if [[  $GENICAM_ENV == "" ]] ; then
	     CUR=$(pwd)
	     cd $GIGEPKGDIR/$GIGEVDIR
        # GenICam library is not found - install it here (should be present in package)
        # Check if it is unzipped
        if [ -d  $GENICAM_PKG_STRING ] ; then
            # GenICam package is unzipped - run the installer
            cd $GENICAM_PKG_STRING
            . install.sh
            GENICAM_INSTALLED="Yes"
        else
            # Check for package to unzip
            if [ -f $GENICAM_PKG_STRING.tgz ] ; then
                # Unzip it and install
                tar -zxf $GENICAM_PKG_STRING.tgz
                cd $GENICAM_PKG_STRING
                . install.sh
                GENICAM_INSTALLED="Yes"
            else
                # The GenICam package we want is missing. Cannot continue.         
                echo "******************************************************************************************"
                echo " GenICam library installation not found : GENICAM_ROOT environment variable missing !!!"
                echo "   Make sure it is installed and then restart this installation"
                echo ""
                echo " Note : You may need to log out and back in to set up the environment variables." 
                echo "******************************************************************************************"
                exit -1
            fi
        fi
        cd $CUR
    else
        # Check if existing one is our installation (if so - unzip it here so we can uninstall it later).
        GENICAM2_ENV=`env | grep $GENICAM_OUR_VERSION_ENV_STRING`
        if [[  $GENICAM2_ENV != "" ]] ; then
	         CUR=$(pwd)
	         cd $GIGEPKGDIR/$GIGEVDIR
            if [ -f /etc/profile.d/td_genapi.sh ] ; then
                # Most probably our GenICam installation - 
                if [ ! -d  $GENICAM_PKG_STRING ] ; then
                    # GenICam is not unzipped - we should unzip it so it can be uninstalled (if possible)
                    if [ -f $GENICAM_PKG_STRING.tgz ] ; then
                        # Unzip it (so it is ready for uninstall).
                        tar -zxf $GENICAM_PKG_STRING.tgz
                    fi
                fi
                else
                if [ -f /etc/profile.d/td_genapi.csh ] ; then
                    # Most probably our GenICam installation - 
                    if [ ! -d  $GENICAM_PKG_STRING ] ; then
                        # GenICam is not unzipped - we should unzip it so it can be uninstalled (if possible)
                        if [ -f $GENICAM_PKG_STRING.tgz ] ; then
                            # Unzip it (so it is ready for uninstall).
                            tar -zxf $GENICAM_PKG_STRING.tgz
                        fi
                    fi
                fi         
            fi
        fi
        cd $CUR
    fi

    # Display the license information and get acceptance/rejection.
    #
	 echo "Please read the terms of use for GigE_V Framework $GEV_VERSION build $GEV_BUILD"
    # Detect if X11 (GUI environment) is running.
    #
    if [[ $DISPLAY ]] ; then 
        if [ -x /usr/bin/gnome-terminal ] ; then
            OUTPUT_LICENSE="/usr/bin/gnome-terminal -t GIGE_V_LICENSE.TXT -x ../../utils/display_license ../GIGE_V_LICENSE.TXT "
        elif [ -x /usr/bin/xterm ] ; then
            OUTPUT_LICENSE="/usr/bin/xterm -T GIGE_V_LICENSE.TXT -e ../../utils/display_license ../GIGE_V_LICENSE.TXT"
        else
            OUTPUT_LICENSE="../../utils/display_license ../GIGE_V_LICENSE.TXT"
        fi
    else
        OUTPUT_LICENSE="../../utils/display_license ../GIGE_V_LICENSE.TXT"
    fi
	 read -p "Press any key to display the license (you must scroll to the end)" INSTALL_PROMPT
    $OUTPUT_LICENSE

    INSTALL_PROMPT=""
    while [ "$INSTALL_PROMPT" == "" ]
    do
        read -p "Do you agree to the terms of use ? [y/n] : " INSTALL_PROMPT
    	 INSTALL_PROMPT=$(echo $INSTALL_PROMPT | tr '[:upper:]' '[:lower:]')
    	 case "$INSTALL_PROMPT" in
    	 "yes" | "y" )
    	     echo "Installing..."
    	     ;;

    	 "no" | "n" )
    	     echo "Cancelling installation"
    	     exit -1
    	     ;;
		 
    	 * )
    	     INSTALL_PROMPT=""
    	     ;;
    	 esac
    done

    # Here we will need the sudo password set up to copy to installation dir.
    #
    INSTALLER_NAME="GigE-V Installer"
    if [[ $DISPLAY ]] ; then
		 if [ -x /usr/bin/gksudo ] ; then
            if ! gksudo -m "$INSTALLER_NAME needs administrative privileges" echo " " ; then
					exit 1
				fi
		 elif [ -x /usr/bin/kdesudo ] ; then
            if ! kdesudo --comment "$INSTALLER_NAME needs administrative privileges" echo " " ; then
                exit 1
            fi
		 else
            echo "**************************************************************"
            echo "****** $INSTALLER_NAME needs administrative privileges ******" 
            sudo echo " "
            RETVAL=$?
            if [[ "$RETVAL" -ne 0 ]] ; then
                exit 1
            fi
		 fi
	else
        echo "**************************************************************"
        echo "****** $INSTALLER_NAME needs administrative privileges ******" 
        sudo echo " "
        RETVAL=$?
        if [[ "$RETVAL" -ne 0 ]] ; then
            exit 1
        fi
    fi

    # Build shared Win32 library from source
    #
    CUR=$(pwd)
    cd $GIGEPKGDIR/src/w32lib/corw32
    make 

    # Copy shared libraries to installation location
    #
    W32LIBS=$(ls *.so.*)
    for i in $W32LIBS ; do install_library "$i" $GIGEPKGDIR/src/w32lib/corw32 ; done 

    # Build the shared gevapi library from source (and lib).
    # (Makefile outputs lib in $GIGEPKGDIR/GigE-V/lib)
    #
    cd $CUR
    cd $GIGEPKGDIR/src/gevlib
    make

    cd $GIGEPKGDIR/$GIGEVDIR/lib
    GEVLIBS=$(ls *.so.*)
    for i in $GEVLIBS ; do install_library "$i" $GIGEPKGDIR/$GIGEVDIR/lib ; done 

    # Make sure the .so cache is updated.
    sudo /sbin/ldconfig $LIBINSTALLDIR

    # Create Coreco (now DALSA) include link
    add_coreco_link $GIGEVDIR $GIGEPKGDIR/$GIGEVDIR

    # Add the GIGEV_DIR and GIGEV_XML_DOWNLOAD environment variable(s).
    # Generate the environment variable files to their proper place.
    # Usually this is /etc/profile.d where they get sourced by /etc/profile
    # for interactive shells.
    if [ -d /etc/profile.d ] ; then	
        # For bash shells
        sudo echo "export GIGEV_DIR=/usr/dalsa/$GIGEVDIR" > td_gigevapi.sh
        sudo echo "export GIGEV_XML_DOWNLOAD=/usr/dalsa/$GIGEVDIR" >> td_gigevapi.sh
        sudo cp td_gigevapi.sh /etc/profile.d
        # Assume this is a bash shell and set the variables.
        source td_gigevapi.sh
        rm td_gigevapi.sh
		 
        # For csh shells
        sudo echo "setenv GIGEV_DIR /usr/dalsa/$GIGEVDIR" > td_gigevapi.csh
        sudo echo "setenv GIGEV_XML_DOWNLOAD /usr/dalsa/$GIGEVDIR" >> td_gigevapi.csh
        sudo cp td_gigevapi.csh /etc/profile.d
        rm td_gigevapi.csh
			 
        # Update the current environment (in case it needs to be used before another script starts up)
        source /etc/profile
    fi
    

    # Make tools
    cd $GIGEPKGDIR/$GIGEVDIR/tools/gevipconfig
    make
    sudo make install
    cd $GIGEPKGDIR/$GIGEVDIR/tools/GigeDeviceStatus
    make
    sudo make install

    cd $CUR
    
    if [[  $GENICAM_INSTALLED == "Yes" ]] ; then
        echo "******************************************************************************************"
        echo " GenICam library installation was performed - you will need to log out and back in to "
        echo " properly set up the environment variables. " 
        echo "******************************************************************************************"
    
    fi
    
    exit 0

fi

if  [ $OPTION = "Uninstall" ] ; then

    # Here we will need the sudo password set up to remove links and libraries.
    #
    INSTALLER_NAME="GigE-V Uninstaller"
    if [[ $DISPLAY ]] ; then
		 if [ -x /usr/bin/gksudo ] ; then
            if ! gksudo -m "$INSTALLER_NAME needs administrative privileges" echo " " ; then
					exit 1
				fi
		 elif [ -x /usr/bin/kdesudo ] ; then
            if ! kdesudo --comment "$INSTALLER_NAME needs administrative privileges" echo " " ; then
                exit 1
            fi
		 else
            echo "**************************************************************"
            echo "****** $INSTALLER_NAME needs administrative privileges ******" 
            sudo echo " "
            RETVAL=$?
            if [[ "$RETVAL" -ne 0 ]] ; then
                exit 1
            fi
		 fi
    else
        echo "**************************************************************"
        echo "****** $INSTALLER_NAME needs administrative privileges ******" 
        sudo echo " "
        RETVAL=$?
        if [[ "$RETVAL" -ne 0 ]] ; then
            exit 1
        fi
    fi
   
    del_coreco_link $GIGEVDIR

    # Remove the environment variable files.
    # Usually this is /etc/profile.d where they get sourced by /etc/profile
    # for interactive shells.
    if [ -f /etc/profile.d/td_gigevapi.sh ] ; then
        sudo rm /etc/profile.d/td_gigevapi.sh
    fi
    if [ -f /etc/profile.d/td_gigevapi.csh ] ; then
        sudo rm /etc/profile.d/td_gigevapi.csh
    fi
    source /etc/profile

    # Gige-V Framework libraries
    CUR=$(pwd)

    cd $GIGEPKGDIR/$GIGEVDIR/lib
    GENIELIBS=$(ls *.so.*)
    for i in $GENIELIBS ; do remove_library "$i" ; done
    cd $GIGEPKGDIR/src/gevlib
    make clean

    cd $GIGEPKGDIR/src/w32lib/corw32
    W32LIBS=$(ls *.so.*)
    for i in $W32LIBS ; do remove_library "$i" ; done
    make clean

    cd $GIGEPKGDIR/$GIGEVDIR/tools/gevipconfig
    sudo make clean
    sudo make uninstall

    cd $GIGEPKGDIR/$GIGEVDIR/tools/GigeDeviceStatus
    sudo make clean
    sudo make uninstall

    cd $GIGEPKGDIR/$GIGEVDIR
    CUR2=$(pwd)

    # Check for GenICam library installation - reminder for uninstalling.
    GENICAM_ENV=`env | grep $GENICAM_VERSION_ENV_STRING`
    #GENICAM_ENV=`env | grep GENICAM_ROOT`
    if [[  $GENICAM_ENV != "" ]] ; then
        # GenICam library is installed - remind them how to uninstall is needed
        # Check if we installed it
        if [ -d  ./$GENICAM_PKG_STRING ] ; then
            # GenICam package is unzipped - assume we installed it.
            #
            echo ""
            echo "******************************************************************************************"
            echo " Found the GenICam library installation directory at $CUR2/$GENICAM_PKG_STRING "
            echo "    It is not necessary to uninstall it if it will be re-used later "
            echo ""
            echo " To uninstall the GenICam library use the following command :" 
            echo ""
            echo "    . $CUR2/$GENICAM_PKG_STRING/uninstall.sh "
            echo ""
            echo " (Then you will need to log out and log in to remove the environment variables)" 
            echo ""
           echo "******************************************************************************************"
        else
            # The GenICam package might not have been installed by us         
            echo ""
            echo "******************************************************************************************"
            echo " The GenICam library installation directory was not found "
            echo "    It is not necessary to uninstall it if it will be re-used later"
            echo ""
            echo " Note : You will need to uninstall it manually if you want it uninstalled" 
            echo "******************************************************************************************"
         fi
    fi
    
    cd $CUR

    exit 0
fi
